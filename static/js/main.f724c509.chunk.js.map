{"version":3,"sources":["atoms.ts","theme.ts","components/Main.tsx","styles/chart-style.tsx","components/Chart.tsx","components/SleepChart.tsx","components/Charts.tsx","components/Header.tsx","components/Footer.tsx","components/Terms.tsx","App.tsx","index.tsx"],"names":["themeState","atom","key","default","isChartAtom","lightTheme","bgColor","textColor","accentColor","buttonColor","borderColor","footerBgColor","darkTheme","MainWrapper","styled","div","props","theme","aside","main","Main","useState","chartDB","setChartDB","date","Date","currentDate","getFullYear","getMonth","newLocalData","wakeUpDateTrack","wakeUpTimeTrack","sleepDateTrack","sleepTimeTrack","useEffect","response","localStorage","getItem","newDB","storageData","JSON","parse","isCurrent","findIndex","el","console","log","oldData","setItem","stringify","map","index","to","substring","ChartWrapper","FormWrapper","Container","DeleteButton","button","averageTime","timeArray","allTimes","time","Number","average","length","hours","Math","floor","minutes","toFixed","sleepAverageTime","chartTextColor","isDark","chartGridColor","PageWrapper","BtnLink","isChart","Chart","useRecoilState","setIsChart","wakeUpData","setWakeUpData","navigate","useNavigate","isinputDisable","setIsinputDisable","id","useParams","useForm","register","handleSubmit","setValue","todayDate","getDate","undefined","splice","sendToLocalStorage","storageFind","find","timeConverter","prevTime","onSubmit","newTimeTrack","stringTimeSplit","wakeUpInput","split","stringTime","numberTimeSplit","isToady","copyDateArr","copyTime","newData2","htmlFor","className","required","autoComplete","type","min","max","disabled","onClick","isToday","alert","copyWakeUpTime","old","series","name","data","options","chart","height","dropShadow","enabled","color","top","left","blur","opacity","toolbar","show","colors","dataLabels","offsetX","offsetY","formatter","value","background","foreColor","borderWidth","stroke","curve","title","text","align","style","fontSize","grid","row","xaxis","lines","yaxis","markers","size","categories","labels","axisBorder","axisTicks","tickAmount","legend","position","horizontalAlign","floating","tooltip","y","React","memo","SleepChart","sleepData","setSleepData","sleepInput","prevMonthLastDate","copySleepTime","Charts","useRecoilValue","HeaderSection","header","isScroll","ToggleButton","motion","isToggle","Header","scrollYProgress","useViewportScroll","setIsDark","setIsScroll","onChange","get","isOn","setIsOn","prev","layout","FooterWrapper","footer","FooterContainer","Footer","href","target","rel","TermWrapper","Terms","GlobalStyle","createGlobalStyle","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f724c509.chunk.js","sourcesContent":["import { atom } from 'recoil';\r\n\r\nexport const themeState = atom<boolean>({\r\n\tkey: 'themeState',\r\n\tdefault: false,\r\n});\r\n\r\n// 새로운 차트 데이터 형태 [{date: \"202111\", wakeUpDateTrack: [27, 28], wakeUpTimeTrack: [\"1.8\"], sleepDateTrack: [1, 2], sleepTimeTrack: [\"1.8\"] }]\r\n// [{date: \"2021-11\", chartData: { wakeUp: {}, sleep: {} } }]\r\n// date가 현재 날짜인가? 맞으면 안에 있는 데이터들을 가져와서 보여줌 / 아니라면 새로운 객체를 만들어서 저장함\r\n// console.log(date.getFullYear(), date.getMonth() + 1); 둘 다 number임 근데 0추가하려면 string이어야 함 -> date: 20221되는데 202201로 바꾸려면 10보다 작을 때 0 추가해주는 방식 하면 됨\r\nexport interface IChartData {\r\n\tdate: string;\r\n\twakeUpDateTrack: number[];\r\n\twakeUpTimeTrack: string[];\r\n\tsleepDateTrack: number[];\r\n\tsleepTimeTrack: string[];\r\n}\r\nexport const chartData = atom<IChartData[]>({\r\n\tkey: 'chartData',\r\n\tdefault: [],\r\n});\r\n\r\nexport const isChartAtom = atom<boolean>({\r\n\tkey: 'chartData',\r\n\tdefault: true,\r\n});\r\n","import { DefaultTheme } from 'styled-components';\r\n\r\nexport const lightTheme: DefaultTheme = {\r\n\tbgColor: '#FFFFFF',\r\n\ttextColor: '#0D1117',\r\n\taccentColor: '#9C90E8',\r\n\tbuttonColor: '#90cdf4',\r\n\tborderColor: '#dadde1',\r\n\tfooterBgColor: '#303846',\r\n};\r\n\r\nexport const darkTheme: DefaultTheme = {\r\n\tbgColor: '#292D3E', // 검은색: #0D1117, 그래프의 GRID 색: #BFC7D5 / 검은색: #292D3E\r\n\ttextColor: '#C9D1D9',\r\n\taccentColor: '#9C90E8',\r\n\tbuttonColor: '#90cdf4',\r\n\tborderColor: '#606770',\r\n\tfooterBgColor: '#303846',\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { IChartData } from '../atoms';\r\n\r\nconst MainWrapper = styled.div`\r\n\tpadding-top: 60px;\r\n\theight: 100vh;\r\n\r\n\tul {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t}\r\n\r\n\tli {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\t\t/* width: 100px; */\r\n\t\tbackground-color: ${(props) => props.theme.buttonColor};\r\n\t\tborder-radius: 6px;\r\n\t\tmargin: 6px;\r\n\t\ttext-align: center;\r\n\r\n\t\ta {\r\n\t\t\tdisplay: block;\r\n\t\t\tpadding: 20px;\r\n\t\t\twidth: 100%;\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nconst leftAside = styled.aside``;\r\n\r\nconst MainSection = styled.main``;\r\n\r\nfunction Main() {\r\n\t// const [chartDB, setChartDB] = useRecoilState<IChartData[]>(chartData);\r\n\tconst [chartDB, setChartDB] = useState<IChartData[]>([]);\r\n\tlet date = new Date();\r\n\tconst currentDate = `${date.getFullYear()}${\r\n\t\tdate.getMonth() + 1 < 10 ? `0${date.getMonth() + 1}` : date.getMonth() + 1\r\n\t}`;\r\n\r\n\tconst newLocalData: IChartData[] = [\r\n\t\t{\r\n\t\t\tdate: currentDate,\r\n\t\t\twakeUpDateTrack: [],\r\n\t\t\twakeUpTimeTrack: [],\r\n\t\t\tsleepDateTrack: [],\r\n\t\t\tsleepTimeTrack: [],\r\n\t\t},\r\n\t];\r\n\r\n\tuseEffect(() => {\r\n\t\tconst response = localStorage.getItem('userWakeUpChartData');\r\n\r\n\t\tif (!response) {\r\n\t\t\t// 처음 들어왔을 때 바로 아래 실행\r\n\t\t\tconsole.log('처음 들어왔을 때');\r\n\r\n\t\t\tsetChartDB([...newLocalData]);\r\n\t\t\tlocalStorage.setItem('userWakeUpChartData', JSON.stringify(newLocalData));\r\n\t\t} else {\r\n\t\t\tconst storageData: IChartData[] = JSON.parse(response);\r\n\t\t\tconst isCurrent = storageData.findIndex((el) => el?.date === currentDate); // 현재 Year&Month인지 확인\r\n\r\n\t\t\tif (isCurrent !== -1) {\r\n\t\t\t\t// 현재 날짜가 맞으면 아래를 실행\r\n\t\t\t\tsetChartDB(storageData);\r\n\t\t\t\tconsole.log('데이터에 현재 날짜가 있을 때');\r\n\t\t\t\tconsole.log(currentDate);\r\n\t\t\t\tconsole.log(isCurrent);\r\n\t\t\t} else {\r\n\t\t\t\t// 11월 -> 12월로 바뀌면 새로운 date: Year&Month 를 추가\r\n\t\t\t\tconsole.log('새로운 월로 넘어왔을 때');\r\n\t\t\t\tlet newDB;\r\n\t\t\t\tsetChartDB((oldData) => {\r\n\t\t\t\t\tnewDB = [...oldData, ...newLocalData];\r\n\t\t\t\t\tlocalStorage.setItem('userWakeUpChartData', JSON.stringify(newDB));\r\n\t\t\t\t\treturn newDB;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<MainWrapper>\r\n\t\t\t\t<nav>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t{chartDB.map((el, index) => (\r\n\t\t\t\t\t\t\t<li key={index}>\r\n\t\t\t\t\t\t\t\t<Link to={`/${el.date}`}>\r\n\t\t\t\t\t\t\t\t\t{el?.date.substring(0, 4)}-{el?.date.substring(4)}월\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</nav>\r\n\t\t\t</MainWrapper>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Main;\r\n","import styled from 'styled-components';\r\n\r\nexport const Title = styled.div`\r\n\tpadding: 10px;\r\n\tfont-size: 2rem;\r\n\tfont-weight: bold;\r\n\t/* text-align: center; */\r\n`;\r\n\r\nexport const ChartWrapper = styled.div`\r\n\t/* flex: 1; */\r\n\t/* min-width: 600px; */\r\n\t/* max-width: 1200px; */\r\n\t/* margin: 0 auto; */\r\n\t/* border: 1px solid #eee; */\r\n\t/* border-radius: 10px; */\r\n\t/* box-shadow: 1px 1px #eee; */\r\n\t/* align-self: center; */\r\n\r\n\t.wrp {\r\n\t\t/* min-width: 600px;\r\n\t\tmax-width: 1200px; */\r\n\t\tborder: 1px solid ${(props) => props.theme.borderColor};\r\n\t\tborder-radius: 10px;\r\n\t\tpadding: 10px;\r\n\t\tmargin: 0 auto;\r\n\t\tbox-shadow: rgb(0 0 0 / 4%) 0px 2px 10px 0px;\r\n\t}\r\n`;\r\n\r\nexport const FormWrapper = styled.div`\r\n\tpadding: 8px;\r\n\tmin-width: 232px;\r\n\tmax-width: 300px;\r\n\tflex-grow: 1;\r\n\tflex-shrink: 1;\r\n\theight: 100%;\r\n\tmin-width: 200px;\r\n\tborder-right: 1px solid ${(props) => props.theme.borderColor}; //#dadde1 #606770\r\n\r\n\tform {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\twidth: 100%;\r\n\t}\r\n\tlabel {\r\n\t\tmargin-bottom: 10px;\r\n\t}\r\n\r\n\t.inputSection {\r\n\t\tdisplay: inline-flex;\r\n\t\talign-items: stretch;\r\n\t\tmargin-bottom: 16px;\r\n\r\n\t\tbutton {\r\n\t\t\tflex-grow: 1;\r\n\t\t\tborder-radius: 16px;\r\n\t\t\ttransition: opacity 0.2s ease-in-out;\r\n\r\n\t\t\t&:hover {\r\n\t\t\t\topacity: 0.5;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t.time-input {\r\n\t\tdisplay: block;\r\n\t\tmin-width: 170px;\r\n\t\theight: auto;\r\n\t\tbackground-color: transparent;\r\n\r\n\t\t& {\r\n\t\t\tborder: none;\r\n\t\t\tcolor: #2a2c2d;\r\n\t\t\tfont-size: 14px;\r\n\t\t\tfont-family: helvetica;\r\n\t\t}\r\n\t\t&::-webkit-datetime-edit-fields-wrapper {\r\n\t\t\tdisplay: flex;\r\n\t\t}\r\n\r\n\t\t&::-webkit-datetime-edit-text {\r\n\t\t\tpadding: 19px 4px;\r\n\t\t}\r\n\r\n\t\t&::-webkit-datetime-edit-hour-field {\r\n\t\t\tbackground-color: #f2f4f5;\r\n\t\t\tborder-radius: 15%;\r\n\t\t\tpadding: 19px 13px;\r\n\t\t}\r\n\r\n\t\t&::-webkit-datetime-edit-minute-field {\r\n\t\t\tbackground-color: #f2f4f5;\r\n\t\t\tborder-radius: 15%;\r\n\t\t\tpadding: 19px 13px;\r\n\t\t}\r\n\r\n\t\t&::-webkit-datetime-edit-ampm-field {\r\n\t\t\tbackground-color: #7155d3;\r\n\t\t\tborder-radius: 15%;\r\n\t\t\tcolor: #fff;\r\n\t\t\tpadding: 19px 13px;\r\n\t\t}\r\n\r\n\t\t&::-webkit-clear-button {\r\n\t\t\tdisplay: none;\r\n\t\t}\r\n\r\n\t\t&::-webkit-inner-spin-button {\r\n\t\t\tdisplay: none;\r\n\t\t}\r\n\r\n\t\t&::-webkit-calendar-picker-indicator {\r\n\t\t\tbackground: transparent;\r\n\t\t\tleft: -10px;\r\n\t\t\tcolor: transparent;\r\n\t\t\tcursor: pointer;\r\n\t\t\theight: 56px;\r\n\t\t\twidth: 170px;\r\n\t\t\tposition: absolute;\r\n\t\t}\r\n\r\n\t\t&:focus {\r\n\t\t\toutline: none;\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nexport const Container = styled.div`\r\n\tpadding: 15px;\r\n\tdisplay: flex;\r\n\tmin-width: 600px;\r\n\tmax-width: 1200px;\r\n\tmargin: 0 auto;\r\n\tflex-direction: column;\r\n\toverflow-y: scroll;\r\n\r\n\t&::-webkit-scrollbar {\r\n\t\tdisplay: none;\r\n\t}\r\n\r\n\t${ChartWrapper} {\r\n\t\tflex: 1;\r\n\t}\r\n`;\r\n\r\nexport const DeleteButton = styled.button`\r\n\tcursor: pointer;\r\n\tbackground-color: tomato;\r\n\tcolor: white;\r\n\tfont-weight: bold;\r\n\tborder-radius: 5px;\r\n\tpadding: 5px;\r\n\twidth: 100%;\r\n\tmargin-bottom: 8px;\r\n\r\n\t&:disabled {\r\n\t\topacity: 0.5;\r\n\t\tcursor: not-allowed;\r\n\t}\r\n`;\r\n\r\nexport function averageTime(timeArray: string[]) {\r\n\tlet allTimes = 0;\r\n\ttimeArray.map((time) => Number(time)).map((time) => (allTimes += time));\r\n\tconst average = allTimes / timeArray.length;\r\n\r\n\tlet hours = Math.floor(average);\r\n\tlet minutes = ((average - hours) * 60).toFixed(0);\r\n\treturn `${hours < 10 ? `0${hours}` : hours}\\:${\r\n\t\tNumber(minutes) < 10 ? `0${minutes}` : minutes\r\n\t}`;\r\n}\r\n\r\nexport function sleepAverageTime(timeArray: string[]) {\r\n\tlet allTimes = 0;\r\n\ttimeArray.map((time) => Number(time)).map((time) => (allTimes += time));\r\n\tconst average = allTimes / timeArray.length;\r\n\r\n\tlet hours = Math.floor(average);\r\n\tlet minutes = ((average - hours) * 60).toFixed(0);\r\n\treturn `${hours >= 24 ? `0${hours - 24}` : hours}\\:${\r\n\t\tNumber(minutes) < 10 ? `0${minutes}` : minutes\r\n\t}`;\r\n}\r\n\r\nexport function chartTextColor(isDark: boolean): string {\r\n\treturn isDark ? '#C9D1D9' : '#0D1117';\r\n}\r\n\r\nexport function chartGridColor(isDark: boolean): string {\r\n\treturn isDark ? '#c9d1d940' : '#e7e7e775';\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport ApexChart from 'react-apexcharts';\r\nimport styled from 'styled-components';\r\nimport { useForm } from 'react-hook-form';\r\nimport {\r\n\taverageTime,\r\n\tchartGridColor,\r\n\tchartTextColor,\r\n\tChartWrapper,\r\n\tContainer,\r\n\tDeleteButton,\r\n\tFormWrapper,\r\n} from '../styles/chart-style';\r\nimport { useRecoilState } from 'recoil';\r\nimport { IChartData, isChartAtom, themeState } from '../atoms';\r\nimport { useNavigate, useParams } from 'react-router';\r\nimport { IBtnLink } from './Charts';\r\n\r\ninterface ISubmitProps {\r\n\twakeUpInput: string;\r\n}\r\n\r\nconst PageWrapper = styled.div`\r\n\tdisplay: flex;\r\n\theight: 100vh;\r\n\tpadding-top: 60px;\r\n\r\n\t${Container} {\r\n\t\tflex: 1;\r\n\t\tmin-width: 520px;\r\n\t}\r\n`;\r\n\r\nconst BtnLink = styled.div<IBtnLink>`\r\n\tdisplay: flex;\r\n\tmargin-bottom: 20px;\r\n\r\n\tbutton {\r\n\t\tbackground-color: #90cdf4;\r\n\t\tborder-radius: 10px;\r\n\t\twidth: 100%;\r\n\t\theight: 50px;\r\n\t\topacity: 0.5;\r\n\t\ttransition: opacity 0.25s ease-in-out, box-shadow 0.25s ease-in-out;\r\n\t\tbox-shadow: 10px 10px 14px 1px rgb(0 0 0 / 10%);\r\n\r\n\t\t&.isWakeup {\r\n\t\t\topacity: ${(props) => (props.isChart ? '1' : '0.7')};\r\n\t\t\tpointer-events: ${(props) => (props.isChart ? 'none' : 'all')};\r\n\t\t\tbox-shadow: ${(props) =>\r\n\t\t\t\tprops.isChart ? 'none' : '10px 10px 14px 1px rgb(0 0 0 / 10%)'};\r\n\t\t}\r\n\r\n\t\t&.isSleep {\r\n\t\t\topacity: ${(props) => (props.isChart ? '0.7' : '1')};\r\n\t\t\tpointer-events: ${(props) => (props.isChart ? 'all' : 'none')};\r\n\t\t\tbox-shadow: ${(props) =>\r\n\t\t\t\tprops.isChart ? '10px 10px 14px 1px rgb(0 0 0 / 10%)' : 'none'};\r\n\t\t}\r\n\r\n\t\t&:first-child {\r\n\t\t\tmargin-right: 30px;\r\n\t\t}\r\n\r\n\t\t&:hover {\r\n\t\t\topacity: 1;\r\n\t\t\tbox-shadow: none;\r\n\t\t}\r\n\t}\r\n`;\r\n\r\n// 비율 바꾸기\r\nconst oneMinute = 1 / 60;\r\n\r\nfunction Chart() {\r\n\tconst [isChart, setIsChart] = useRecoilState(isChartAtom);\r\n\tconst [wakeUpData, setWakeUpData] = useState<IChartData[]>([]);\r\n\tconst navigate = useNavigate();\r\n\tconst [isinputDisable, setIsinputDisable] = useState(false);\r\n\tconst [isDark, setIsDark] = useRecoilState(themeState);\r\n\tconst { id } = useParams();\r\n\tconst { register, handleSubmit, setValue } = useForm();\r\n\tlet date = new Date();\r\n\tconst todayDate = date.getDate();\r\n\t// 변경사항을 localStorage에 저장하는 함수\r\n\tfunction sendToLocalStorage() {\r\n\t\tconst response = localStorage.getItem('userWakeUpChartData');\r\n\t\tif (!response) {\r\n\t\t\treturn;\r\n\t\t} else {\r\n\t\t\tconst storageData: IChartData[] = JSON.parse(response);\r\n\t\t\tstorageData.splice(\r\n\t\t\t\tstorageData.findIndex((el) => el?.date === id),\r\n\t\t\t\t1,\r\n\t\t\t\twakeUpData[0]\r\n\t\t\t);\r\n\t\t\tlocalStorage.setItem('userWakeUpChartData', JSON.stringify(storageData));\r\n\t\t}\r\n\t}\r\n\r\n\t// wakeUpData가 변경될 때마다 localStorage에 저장해줌\r\n\tuseEffect(() => {\r\n\t\tif (wakeUpData !== null || wakeUpData !== undefined) {\r\n\t\t\tif (wakeUpData.length !== 0) {\r\n\t\t\t\tsendToLocalStorage();\r\n\t\t\t}\r\n\t\t}\r\n\t}, [wakeUpData]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst response = localStorage.getItem('userWakeUpChartData');\r\n\t\tif (!response) {\r\n\t\t\t// 데이터 없는데 들어왔다면 메인 페이지로\r\n\t\t\tnavigate('/');\r\n\t\t} else {\r\n\t\t\tconst storageData: IChartData[] = JSON.parse(response);\r\n\t\t\tconst storageFind = storageData.find((el) => el?.date === id);\r\n\t\t\tif (storageFind === undefined) return;\r\n\t\t\tsetWakeUpData([storageFind]);\r\n\t\t}\r\n\t}, []);\r\n\r\n\t// input의 disabled 설정\r\n\tuseEffect(() => {\r\n\t\tif (\r\n\t\t\t`${date.getFullYear()}${\r\n\t\t\t\tdate.getMonth() + 1 < 10\r\n\t\t\t\t\t? `0${date.getMonth() + 1}`\r\n\t\t\t\t\t: date.getMonth() + 1\r\n\t\t\t}` === id\r\n\t\t) {\r\n\t\t\tsetIsinputDisable(false);\r\n\t\t} else {\r\n\t\t\tsetIsinputDisable(true);\r\n\t\t}\r\n\t}, []);\r\n\r\n\t// 일어난 시간 설정\r\n\tconst onValid = ({ wakeUpInput }: ISubmitProps) => {\r\n\t\tconst stringTimeSplit = wakeUpInput\r\n\t\t\t.split(/\\:/gi)\r\n\t\t\t.map((stringTime) => Number(stringTime));\r\n\r\n\t\tconst numberTimeSplit = stringTimeSplit[0] + stringTimeSplit[1] * oneMinute;\r\n\t\tlet newTimeTrack: string[];\r\n\t\tconst isToady = wakeUpData[0]?.wakeUpDateTrack.findIndex(\r\n\t\t\t(el) => el === todayDate\r\n\t\t); // 새로운 값으로 바뀐 것에서 찾도록 해야 함\r\n\t\tif (wakeUpData[0]?.wakeUpDateTrack === undefined) return;\r\n\t\tconst copyTime = [...wakeUpData[0]?.wakeUpTimeTrack];\r\n\t\tlet copyDateArr;\r\n\r\n\t\t// const prevMonthLastDate = (new Date(date.getFullYear(), date.getMonth(), 0)).getDate() // 이전 달의 마지막 날짜\r\n\t\t// 날짜 지나면 추가하는 것 막아야 함 v\r\n\t\t// if() {} 데이터에 접근해서 date의 몇 월인지 가져오고 date.getMonth()와 다르면 alert로 \"다음 달에서 작성해야 합니다.\" 라고 알림 띄우기 -> useParams의 202112와 현재가 다르면\r\n\t\t// SleepChart에서는 시작 날짜를 이전 달의마지막 일자로 넣어서 시작하도록 함 -> 30 1 2 3 이렇게 이전 달의 마지막 날을 시작으로\r\n\t\t// 데이터 받아온 후 findIndex -> find로 걸러서 값 수정해서 다시 넣는다.\r\n\r\n\t\tif (isToady === -1) {\r\n\t\t\t// 오늘 날짜가 없으면 날짜를 추가하고, 기상 시간도 함께 추가한다.\r\n\t\t\tnewTimeTrack = [...copyTime, numberTimeSplit + ''];\r\n\t\t\tcopyDateArr = [...wakeUpData[0]?.wakeUpDateTrack, todayDate];\r\n\t\t\tlet newData2: IChartData = {\r\n\t\t\t\t...wakeUpData[0],\r\n\t\t\t\twakeUpDateTrack: copyDateArr,\r\n\t\t\t\twakeUpTimeTrack: newTimeTrack,\r\n\t\t\t};\r\n\t\t\tsetWakeUpData([newData2]);\r\n\t\t} else {\r\n\t\t\t// 오늘 날짜가 있으면 날짜를 추가하지 않고 기상 시간만 수정한다.\r\n\t\t\tif (isToady === undefined) return;\r\n\t\t\tcopyTime[isToady] = numberTimeSplit + '';\r\n\t\t\tsetWakeUpData([{ ...wakeUpData[0], wakeUpTimeTrack: copyTime }]);\r\n\t\t}\r\n\t\tsetValue('wakeUpInput', '');\r\n\t};\r\n\r\n\tconst deleteToday = () => {\r\n\t\t/* useState의 배열에 오늘 날짜(26)일이 없으면 삭제 못 함 당일만 삭제/수정 가능 */\r\n\t\tconst isToday = wakeUpData[0]?.wakeUpDateTrack.findIndex(\r\n\t\t\t(el) => el === todayDate\r\n\t\t);\r\n\t\tif (isToday === -1) {\r\n\t\t\talert('이전의 시간은 삭제할 수 없습니다.');\r\n\t\t} else {\r\n\t\t\tconst copyWakeUpTime = [...wakeUpData[0]?.wakeUpTimeTrack];\r\n\t\t\tconst copyDateArr = [...wakeUpData[0]?.wakeUpDateTrack];\r\n\t\t\tcopyWakeUpTime.splice(isToday, 1);\r\n\t\t\tcopyDateArr.splice(isToday, 1);\r\n\t\t\tsetWakeUpData((old) => {\r\n\t\t\t\treturn [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t...old[0],\r\n\t\t\t\t\t\twakeUpDateTrack: copyDateArr,\r\n\t\t\t\t\t\twakeUpTimeTrack: copyWakeUpTime,\r\n\t\t\t\t\t},\r\n\t\t\t\t];\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tfunction timeConverter(prevTime: number) {\r\n\t\tlet hours = Math.floor(prevTime);\r\n\t\tlet minutes = ((prevTime - hours) * 60).toFixed(0);\r\n\t\treturn `${hours < 10 ? `0${hours}` : hours}\\:${\r\n\t\t\tNumber(minutes) < 10 ? `0${minutes}` : minutes\r\n\t\t}`;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<PageWrapper>\r\n\t\t\t\t<FormWrapper>\r\n\t\t\t\t\t<form onSubmit={handleSubmit(onValid)}>\r\n\t\t\t\t\t\t<label htmlFor=\"wakeUp\">시간 입력 (02:00 ~ 13:00)</label>\r\n\t\t\t\t\t\t<div className=\"inputSection\">\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t{...register('wakeUpInput', { required: true })}\r\n\t\t\t\t\t\t\t\tclassName=\"time-input\"\r\n\t\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t\t\ttype=\"time\"\r\n\t\t\t\t\t\t\t\tid=\"wakeUp\"\r\n\t\t\t\t\t\t\t\tmin=\"02:00\"\r\n\t\t\t\t\t\t\t\tmax=\"13:00\"\r\n\t\t\t\t\t\t\t\tdisabled={isinputDisable}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<button disabled={isinputDisable}>입력/수정</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t\t<DeleteButton\r\n\t\t\t\t\t\tonClick={deleteToday}\r\n\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\tdisabled={isinputDisable}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t오늘 기상 시간 삭제하기\r\n\t\t\t\t\t</DeleteButton>\r\n\t\t\t\t\t<div className=\"time-average\">\r\n\t\t\t\t\t\t평균 기상 시간:{' '}\r\n\t\t\t\t\t\t{wakeUpData[0]?.wakeUpTimeTrack.length\r\n\t\t\t\t\t\t\t? averageTime(wakeUpData[0]?.wakeUpTimeTrack)\r\n\t\t\t\t\t\t\t: 'x'}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</FormWrapper>\r\n\t\t\t\t<Container>\r\n\t\t\t\t\t<BtnLink isChart={isChart}>\r\n\t\t\t\t\t\t<button className=\"isWakeup\" onClick={() => setIsChart(true)}>\r\n\t\t\t\t\t\t\t기상 시간\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button className=\"isSleep\" onClick={() => setIsChart(false)}>\r\n\t\t\t\t\t\t\t취침 시간\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</BtnLink>\r\n\t\t\t\t\t{wakeUpData[0]?.wakeUpTimeTrack !== undefined ? (\r\n\t\t\t\t\t\t<ChartWrapper className=\"chartWrapper\">\r\n\t\t\t\t\t\t\t<div className=\"wrp\">\r\n\t\t\t\t\t\t\t\t<ApexChart\r\n\t\t\t\t\t\t\t\t\ttype=\"line\"\r\n\t\t\t\t\t\t\t\t\tseries={[\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tname: '기상 시간',\r\n\t\t\t\t\t\t\t\t\t\t\tdata: wakeUpData[0]?.wakeUpTimeTrack,\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\t\t\toptions={{\r\n\t\t\t\t\t\t\t\t\t\tchart: {\r\n\t\t\t\t\t\t\t\t\t\t\theight: 350,\r\n\t\t\t\t\t\t\t\t\t\t\ttype: 'line',\r\n\t\t\t\t\t\t\t\t\t\t\tdropShadow: {\r\n\t\t\t\t\t\t\t\t\t\t\t\tenabled: true,\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor: '#000',\r\n\t\t\t\t\t\t\t\t\t\t\t\ttop: 18,\r\n\t\t\t\t\t\t\t\t\t\t\t\tleft: 7,\r\n\t\t\t\t\t\t\t\t\t\t\t\tblur: 10,\r\n\t\t\t\t\t\t\t\t\t\t\t\topacity: 0.2,\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\ttoolbar: {\r\n\t\t\t\t\t\t\t\t\t\t\t\tshow: false,\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\tcolors: [isDark ? '#9C90E8' : '#4CC9FF'],\r\n\t\t\t\t\t\t\t\t\t\tdataLabels: {\r\n\t\t\t\t\t\t\t\t\t\t\tenabled: false,\r\n\t\t\t\t\t\t\t\t\t\t\toffsetX: -10,\r\n\t\t\t\t\t\t\t\t\t\t\toffsetY: -5,\r\n\t\t\t\t\t\t\t\t\t\t\tformatter: (value) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn timeConverter(value as number);\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\tbackground: {\r\n\t\t\t\t\t\t\t\t\t\t\t\tforeColor: 'white', // dataLabel의 text 색상\r\n\t\t\t\t\t\t\t\t\t\t\t\tborderWidth: 0,\r\n\t\t\t\t\t\t\t\t\t\t\t\tdropShadow: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tenabled: false,\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\tstroke: {\r\n\t\t\t\t\t\t\t\t\t\t\tcurve: 'smooth',\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\ttitle: {\r\n\t\t\t\t\t\t\t\t\t\t\ttext: '기상 시간',\r\n\t\t\t\t\t\t\t\t\t\t\talign: 'center',\r\n\t\t\t\t\t\t\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\t\t\t\t\t\tfontSize: '30px',\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor: chartTextColor(isDark),\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\tgrid: {\r\n\t\t\t\t\t\t\t\t\t\t\tshow: true,\r\n\t\t\t\t\t\t\t\t\t\t\tborderColor: chartGridColor(isDark),\r\n\t\t\t\t\t\t\t\t\t\t\trow: {\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolors: ['transparent', 'transparent'],\r\n\t\t\t\t\t\t\t\t\t\t\t\topacity: 0.5,\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\txaxis: {\r\n\t\t\t\t\t\t\t\t\t\t\t\tlines: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tshow: true,\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\tyaxis: {\r\n\t\t\t\t\t\t\t\t\t\t\t\tlines: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tshow: false,\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\tmarkers: {\r\n\t\t\t\t\t\t\t\t\t\t\tsize: 1,\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\txaxis: {\r\n\t\t\t\t\t\t\t\t\t\t\tcategories: wakeUpData[0]?.wakeUpDateTrack,\r\n\t\t\t\t\t\t\t\t\t\t\ttitle: {\r\n\t\t\t\t\t\t\t\t\t\t\t\ttext: `${id?.substring(0, 4)}-${id?.substring(4)}`,\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: chartTextColor(isDark),\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\tlabels: {\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolors: chartTextColor(isDark),\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\taxisBorder: {\r\n\t\t\t\t\t\t\t\t\t\t\t\tshow: true,\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor: chartGridColor(isDark),\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\taxisTicks: {\r\n\t\t\t\t\t\t\t\t\t\t\t\tshow: true,\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor: chartGridColor(isDark),\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\tyaxis: {\r\n\t\t\t\t\t\t\t\t\t\t\ttickAmount: 11,\r\n\t\t\t\t\t\t\t\t\t\t\tmin: 2,\r\n\t\t\t\t\t\t\t\t\t\t\tmax: 13,\r\n\t\t\t\t\t\t\t\t\t\t\tlabels: {\r\n\t\t\t\t\t\t\t\t\t\t\t\tformatter: (value) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn timeConverter(value);\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize: '12px',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolors: chartTextColor(isDark),\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\tlegend: {\r\n\t\t\t\t\t\t\t\t\t\t\tposition: 'top',\r\n\t\t\t\t\t\t\t\t\t\t\thorizontalAlign: 'right',\r\n\t\t\t\t\t\t\t\t\t\t\tfloating: true,\r\n\t\t\t\t\t\t\t\t\t\t\toffsetY: -25,\r\n\t\t\t\t\t\t\t\t\t\t\toffsetX: -5,\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\ttooltip: {\r\n\t\t\t\t\t\t\t\t\t\t\ttheme: isDark ? 'dark' : 'light',\r\n\t\t\t\t\t\t\t\t\t\t\ty: {\r\n\t\t\t\t\t\t\t\t\t\t\t\tformatter: (value) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn timeConverter(value);\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</ChartWrapper>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<>Loading...</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Container>\r\n\t\t\t</PageWrapper>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default React.memo(Chart);\r\n","import React, { useEffect, useState } from 'react';\r\nimport ApexChart from 'react-apexcharts';\r\nimport styled from 'styled-components';\r\nimport { useForm } from 'react-hook-form';\r\nimport {\r\n\tchartGridColor,\r\n\tchartTextColor,\r\n\tChartWrapper,\r\n\tContainer,\r\n\tDeleteButton,\r\n\tFormWrapper,\r\n\tsleepAverageTime,\r\n} from '../styles/chart-style';\r\nimport { useRecoilState } from 'recoil';\r\nimport { IChartData, isChartAtom, themeState } from '../atoms';\r\nimport { useNavigate, useParams } from 'react-router';\r\nimport { IBtnLink } from './Charts';\r\n\r\ninterface ISubmitProps {\r\n\tsleepInput: string;\r\n}\r\n\r\nconst PageWrapper = styled.div`\r\n\tdisplay: flex;\r\n\theight: 100vh;\r\n\tpadding-top: 60px;\r\n\r\n\t${Container} {\r\n\t\tflex: 1;\r\n\t\tmin-width: 520px;\r\n\t}\r\n`;\r\n\r\nconst BtnLink = styled.div<IBtnLink>`\r\n\tdisplay: flex;\r\n\tmargin-bottom: 20px;\r\n\r\n\tbutton {\r\n\t\tbackground-color: #90cdf4;\r\n\t\tborder-radius: 10px;\r\n\t\twidth: 100%;\r\n\t\theight: 50px;\r\n\t\topacity: 0.5;\r\n\t\ttransition: opacity 0.25s ease-in-out;\r\n\t\ttransition: opacity 0.25s ease-in-out, box-shadow 0.25s ease-in-out;\r\n\t\tbox-shadow: 10px 10px 14px 1px rgb(0 0 0 / 10%);\r\n\r\n\t\t&.isWakeup {\r\n\t\t\topacity: ${(props) => (props.isChart ? '1' : '0.7')};\r\n\t\t\tpointer-events: ${(props) => (props.isChart ? 'none' : 'all')};\r\n\t\t\tbox-shadow: ${(props) =>\r\n\t\t\t\tprops.isChart ? 'none' : '10px 10px 14px 1px rgb(0 0 0 / 10%)'};\r\n\t\t}\r\n\t\t&.isSleep {\r\n\t\t\topacity: ${(props) => (props.isChart ? '0.7' : '1')};\r\n\t\t\tpointer-events: ${(props) => (props.isChart ? 'all' : 'none')};\r\n\t\t\tbox-shadow: ${(props) =>\r\n\t\t\t\tprops.isChart ? '10px 10px 14px 1px rgb(0 0 0 / 10%)' : 'none'};\r\n\t\t}\r\n\r\n\t\t&:first-child {\r\n\t\t\tmargin-right: 30px;\r\n\t\t}\r\n\r\n\t\t&:hover {\r\n\t\t\topacity: 1;\r\n\t\t\tbox-shadow: none;\r\n\t\t}\r\n\t}\r\n`;\r\n\r\n// 비율 바꾸기\r\nconst oneMinute = 1 / 60;\r\n\r\nfunction SleepChart() {\r\n\tconst [sleepData, setSleepData] = useState<IChartData[]>([]);\r\n\tconst [isChart, setIsChart] = useRecoilState(isChartAtom);\r\n\r\n\tconst [isDark, setIsDark] = useRecoilState(themeState);\r\n\tconst { id } = useParams();\r\n\tconst { register, handleSubmit, setValue } = useForm();\r\n\tlet date = new Date();\r\n\tconst todayDate = date.getDate();\r\n\tconst navigate = useNavigate();\r\n\tconst [isinputDisable, setIsinputDisable] = useState(false);\r\n\r\n\t// 변경사항을 localStorage에 저장하는 함수\r\n\tfunction sendToLocalStorage() {\r\n\t\tconst response = localStorage.getItem('userWakeUpChartData');\r\n\t\tif (!response) {\r\n\t\t\treturn;\r\n\t\t} else {\r\n\t\t\tconst storageData: IChartData[] = JSON.parse(response);\r\n\t\t\tstorageData.splice(\r\n\t\t\t\tstorageData.findIndex((el) => el?.date === id),\r\n\t\t\t\t1,\r\n\t\t\t\tsleepData[0]\r\n\t\t\t);\r\n\t\t\tlocalStorage.setItem('userWakeUpChartData', JSON.stringify(storageData));\r\n\t\t}\r\n\t}\r\n\r\n\t// sleepData가 변경될 때마다 localStorage에 저장해줌\r\n\tuseEffect(() => {\r\n\t\tif (sleepData !== null || sleepData !== undefined) {\r\n\t\t\tif (sleepData.length !== 0) {\r\n\t\t\t\tsendToLocalStorage();\r\n\t\t\t}\r\n\t\t}\r\n\t}, [sleepData]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst response = localStorage.getItem('userWakeUpChartData');\r\n\t\tif (!response) {\r\n\t\t\t// 데이터 없는데 들어왔다면 메인 페이지로\r\n\t\t\tnavigate('/');\r\n\t\t} else {\r\n\t\t\tconst storageData: IChartData[] = JSON.parse(response);\r\n\t\t\tconst storageFind = storageData.find((el) => el?.date === id);\r\n\t\t\tif (storageFind === undefined) return;\r\n\t\t\tsetSleepData([storageFind]);\r\n\t\t}\r\n\t}, []);\r\n\r\n\t// input의 disabled 설정\r\n\tuseEffect(() => {\r\n\t\tif (\r\n\t\t\t`${date.getFullYear()}${\r\n\t\t\t\tdate.getMonth() + 1 < 10\r\n\t\t\t\t\t? `0${date.getMonth() + 1}`\r\n\t\t\t\t\t: date.getMonth() + 1\r\n\t\t\t}` === id\r\n\t\t) {\r\n\t\t\tsetIsinputDisable(false);\r\n\t\t} else {\r\n\t\t\tsetIsinputDisable(true);\r\n\t\t}\r\n\t}, []);\r\n\r\n\t// 일어난 시간 설정\r\n\tconst onValid = ({ sleepInput }: ISubmitProps) => {\r\n\t\tconst stringTimeSplit = sleepInput\r\n\t\t\t.split(/\\:/gi)\r\n\t\t\t.map((stringTime) => Number(stringTime));\r\n\r\n\t\tif (stringTimeSplit[0] <= 6) {\r\n\t\t\tstringTimeSplit[0] += 24;\r\n\t\t}\r\n\t\tconst numberTimeSplit = stringTimeSplit[0] + stringTimeSplit[1] * oneMinute;\r\n\t\tlet newData: string[];\r\n\t\tlet isToday = sleepData[0].sleepDateTrack.findIndex(\r\n\t\t\t(el) => el === todayDate - 1\r\n\t\t); // 일어난 날짜가 28일이면 27일에 잠을 자고 일어난 것이니까 하루 뺐음\r\n\r\n\t\t// date가 빈 배열일 때는 isToday = 0일 필요가 없음 ->\r\n\t\tif (todayDate - 1 === 0) {\r\n\t\t\t// 새로운 달 이니까 배열의 첫 번째로 이전 달의 마지막 날짜가 들어가야 한다. -> 0번째 index에 이전 달의 마지막 날짜를 넣으면 됨\r\n\t\t\tif (sleepData[0].sleepDateTrack.length === 1) {\r\n\t\t\t\tisToday = 0;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst copyTime = [...sleepData[0].sleepTimeTrack];\r\n\r\n\t\tif (isToday === -1) {\r\n\t\t\tif (todayDate - 1 === 0) {\r\n\t\t\t\t// 오늘이 1일 이라면 이전 달의 마지막 날을 date 배열로 추가한다. -> 30 1 2 3 이렇게 이전 달의 마지막 날부터 시작하는 형식임\r\n\t\t\t\tconst prevMonthLastDate = new Date(\r\n\t\t\t\t\tdate.getFullYear(),\r\n\t\t\t\t\tdate.getMonth(),\r\n\t\t\t\t\t0\r\n\t\t\t\t).getDate();\r\n\t\t\t\tconst newTimeTrack = [...copyTime, numberTimeSplit + ''];\r\n\t\t\t\tconst copyDateArr = [\r\n\t\t\t\t\t...sleepData[0]?.sleepDateTrack,\r\n\t\t\t\t\tprevMonthLastDate,\r\n\t\t\t\t];\r\n\t\t\t\tlet newData2: IChartData = {\r\n\t\t\t\t\t...sleepData[0],\r\n\t\t\t\t\tsleepDateTrack: copyDateArr,\r\n\t\t\t\t\tsleepTimeTrack: newTimeTrack,\r\n\t\t\t\t};\r\n\t\t\t\tsetSleepData([newData2]);\r\n\t\t\t} else {\r\n\t\t\t\tconst newTimeTrack = [...copyTime, numberTimeSplit + ''];\r\n\t\t\t\tconst copyDateArr = [...sleepData[0]?.sleepDateTrack, todayDate - 1];\r\n\t\t\t\tlet newData2: IChartData = {\r\n\t\t\t\t\t...sleepData[0],\r\n\t\t\t\t\tsleepDateTrack: copyDateArr,\r\n\t\t\t\t\tsleepTimeTrack: newTimeTrack,\r\n\t\t\t\t};\r\n\t\t\t\tsetSleepData([newData2]);\r\n\t\t\t}\r\n\t\t\t// newData = [...copyTime, numberTimeSplit + ''];\r\n\t\t\t// setSleepTime(newData);\r\n\t\t} else {\r\n\t\t\tcopyTime[isToday] = numberTimeSplit + ''; // 1일에는 이전 달의 마지막 날짜가 추가되어서 수정하려고 할 때 isToady가 계속 현재 날짜 1일이 없다고 나와서 계속 데이터 추가됨\r\n\t\t\tsetSleepData([{ ...sleepData[0], sleepTimeTrack: copyTime }]);\r\n\t\t}\r\n\t\tsetValue('sleepInput', '');\r\n\t};\r\n\r\n\tconst deleteToday = () => {\r\n\t\t/* useState의 배열에 오늘 날짜(26)일이 없으면 삭제 못 함 당일만 삭제/수정 가능 */\r\n\t\tconst isToday = sleepData[0].sleepDateTrack.findIndex(\r\n\t\t\t(el) => el === todayDate - 1\r\n\t\t);\r\n\t\tif (isToday === -1) {\r\n\t\t\talert('이전의 시간은 삭제할 수 없습니다.');\r\n\t\t} else {\r\n\t\t\tconst copySleepTime = [...sleepData[0].sleepTimeTrack];\r\n\t\t\tconst copyDateArr = [...sleepData[0].sleepDateTrack];\r\n\t\t\tcopySleepTime.splice(isToday, 1);\r\n\t\t\tcopyDateArr.splice(isToday, 1);\r\n\t\t\tsetSleepData((old) => {\r\n\t\t\t\treturn [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t...old[0],\r\n\t\t\t\t\t\tsleepDateTrack: copyDateArr,\r\n\t\t\t\t\t\tsleepTimeTrack: copySleepTime,\r\n\t\t\t\t\t},\r\n\t\t\t\t];\r\n\t\t\t});\r\n\t\t\t// 00:00 ~ 06:00\r\n\t\t}\r\n\t};\r\n\r\n\tfunction timeConverter(prevTime: number) {\r\n\t\tlet hours = Math.floor(prevTime);\r\n\t\tlet minutes = ((prevTime - hours) * 60).toFixed(0);\r\n\t\treturn `${hours >= 24 ? `0${hours - 24}` : hours}\\:${\r\n\t\t\tNumber(minutes) < 10 ? `0${minutes}` : minutes\r\n\t\t}`;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<PageWrapper>\r\n\t\t\t\t<FormWrapper>\r\n\t\t\t\t\t<form onSubmit={handleSubmit(onValid)}>\r\n\t\t\t\t\t\t<label htmlFor=\"sleep\">시간 입력 (19:00 ~ 06:00)</label>\r\n\t\t\t\t\t\t<div className=\"inputSection\">\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t{...register('sleepInput', { required: true })}\r\n\t\t\t\t\t\t\t\tclassName=\"time-input\"\r\n\t\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t\t\ttype=\"time\"\r\n\t\t\t\t\t\t\t\tid=\"sleep\"\r\n\t\t\t\t\t\t\t\tmin=\"19:00\"\r\n\t\t\t\t\t\t\t\tmax=\"06:00\"\r\n\t\t\t\t\t\t\t\tdisabled={isinputDisable}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<button disabled={isinputDisable}>입력/수정</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t\t<DeleteButton\r\n\t\t\t\t\t\tonClick={deleteToday}\r\n\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\tdisabled={isinputDisable}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t오늘 취침 시간 삭제하기\r\n\t\t\t\t\t</DeleteButton>\r\n\t\t\t\t\t<div className=\"time-average\">\r\n\t\t\t\t\t\t평균 취침 시간:{' '}\r\n\t\t\t\t\t\t{sleepData[0]?.sleepTimeTrack.length\r\n\t\t\t\t\t\t\t? sleepAverageTime(sleepData[0]?.sleepTimeTrack)\r\n\t\t\t\t\t\t\t: 'x'}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</FormWrapper>\r\n\t\t\t\t<Container>\r\n\t\t\t\t\t<BtnLink isChart={isChart}>\r\n\t\t\t\t\t\t<button className=\"isWakeup\" onClick={() => setIsChart(true)}>\r\n\t\t\t\t\t\t\t기상 시간\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button className=\"isSleep\" onClick={() => setIsChart(false)}>\r\n\t\t\t\t\t\t\t취침 시간\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</BtnLink>\r\n\t\t\t\t\t{sleepData[0]?.wakeUpTimeTrack !== undefined ? (\r\n\t\t\t\t\t\t<ChartWrapper className=\"chartWrapper\">\r\n\t\t\t\t\t\t\t<div className=\"wrp\">\r\n\t\t\t\t\t\t\t\t<ApexChart\r\n\t\t\t\t\t\t\t\t\ttype=\"line\"\r\n\t\t\t\t\t\t\t\t\tseries={[\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tname: '취침 시간',\r\n\t\t\t\t\t\t\t\t\t\t\tdata: sleepData[0]?.sleepTimeTrack,\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\t\t\toptions={{\r\n\t\t\t\t\t\t\t\t\t\tchart: {\r\n\t\t\t\t\t\t\t\t\t\t\theight: 350,\r\n\t\t\t\t\t\t\t\t\t\t\ttype: 'line',\r\n\t\t\t\t\t\t\t\t\t\t\tdropShadow: {\r\n\t\t\t\t\t\t\t\t\t\t\t\tenabled: true,\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor: '#000',\r\n\t\t\t\t\t\t\t\t\t\t\t\ttop: 18,\r\n\t\t\t\t\t\t\t\t\t\t\t\tleft: 7,\r\n\t\t\t\t\t\t\t\t\t\t\t\tblur: 10,\r\n\t\t\t\t\t\t\t\t\t\t\t\topacity: 0.2,\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\ttoolbar: {\r\n\t\t\t\t\t\t\t\t\t\t\t\tshow: false,\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\tcolors: [isDark ? '#9C90E8' : '#4CC9FF'], // 그래프 색 바꾸는 곳\r\n\t\t\t\t\t\t\t\t\t\tdataLabels: {\r\n\t\t\t\t\t\t\t\t\t\t\tenabled: false,\r\n\t\t\t\t\t\t\t\t\t\t\toffsetX: -10,\r\n\t\t\t\t\t\t\t\t\t\t\toffsetY: -5,\r\n\t\t\t\t\t\t\t\t\t\t\tformatter: (value) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn timeConverter(value as number);\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\tbackground: {\r\n\t\t\t\t\t\t\t\t\t\t\t\tforeColor: 'white', // dataLabel의 text 색상\r\n\t\t\t\t\t\t\t\t\t\t\t\tborderWidth: 0,\r\n\t\t\t\t\t\t\t\t\t\t\t\tdropShadow: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tenabled: false,\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\tstroke: {\r\n\t\t\t\t\t\t\t\t\t\t\tcurve: 'smooth',\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\ttitle: {\r\n\t\t\t\t\t\t\t\t\t\t\ttext: '취침 시간',\r\n\t\t\t\t\t\t\t\t\t\t\talign: 'center',\r\n\t\t\t\t\t\t\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\t\t\t\t\t\tfontSize: '30px',\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor: chartTextColor(isDark),\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\tgrid: {\r\n\t\t\t\t\t\t\t\t\t\t\tshow: true,\r\n\t\t\t\t\t\t\t\t\t\t\tborderColor: chartGridColor(isDark),\r\n\t\t\t\t\t\t\t\t\t\t\trow: {\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolors: ['transparent', 'transparent'],\r\n\t\t\t\t\t\t\t\t\t\t\t\topacity: 0.5,\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\txaxis: {\r\n\t\t\t\t\t\t\t\t\t\t\t\tlines: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tshow: true,\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\tyaxis: {\r\n\t\t\t\t\t\t\t\t\t\t\t\tlines: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tshow: false,\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\tmarkers: {\r\n\t\t\t\t\t\t\t\t\t\t\tsize: 1,\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\txaxis: {\r\n\t\t\t\t\t\t\t\t\t\t\tcategories: sleepData[0]?.sleepDateTrack,\r\n\t\t\t\t\t\t\t\t\t\t\ttitle: {\r\n\t\t\t\t\t\t\t\t\t\t\t\ttext: `${id?.substring(0, 4)}-${id?.substring(4)}`,\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: chartTextColor(isDark),\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\tlabels: {\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolors: chartTextColor(isDark),\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\taxisBorder: {\r\n\t\t\t\t\t\t\t\t\t\t\t\tshow: true,\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor: chartGridColor(isDark),\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\taxisTicks: {\r\n\t\t\t\t\t\t\t\t\t\t\t\tshow: true,\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor: chartGridColor(isDark),\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\tyaxis: {\r\n\t\t\t\t\t\t\t\t\t\t\ttickAmount: 11,\r\n\t\t\t\t\t\t\t\t\t\t\tmin: 19,\r\n\t\t\t\t\t\t\t\t\t\t\tmax: 30,\r\n\t\t\t\t\t\t\t\t\t\t\tlabels: {\r\n\t\t\t\t\t\t\t\t\t\t\t\tformatter: (value) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn timeConverter(value);\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize: '12px',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolors: chartTextColor(isDark),\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\tlegend: {\r\n\t\t\t\t\t\t\t\t\t\t\tposition: 'top',\r\n\t\t\t\t\t\t\t\t\t\t\thorizontalAlign: 'right',\r\n\t\t\t\t\t\t\t\t\t\t\tfloating: true,\r\n\t\t\t\t\t\t\t\t\t\t\toffsetY: -25,\r\n\t\t\t\t\t\t\t\t\t\t\toffsetX: -5,\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\ttooltip: {\r\n\t\t\t\t\t\t\t\t\t\t\ttheme: isDark ? 'dark' : 'light',\r\n\t\t\t\t\t\t\t\t\t\t\ty: {\r\n\t\t\t\t\t\t\t\t\t\t\t\tformatter: (value) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn timeConverter(value);\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</ChartWrapper>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<>Loading...</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Container>\r\n\t\t\t</PageWrapper>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default SleepChart;\r\n","import Chart from '../components/Chart';\r\nimport SleepChart from './SleepChart';\r\nimport { useParams } from 'react-router';\r\nimport styled from 'styled-components';\r\nimport { useRecoilValue } from 'recoil';\r\nimport { isChartAtom } from '../atoms';\r\nimport { Variants } from 'framer-motion';\r\n\r\nexport interface IBtnLink {\r\n\tisChart: boolean;\r\n}\r\n\r\nconst BtnLink = styled.div<IBtnLink>`\r\n\tdisplay: flex;\r\n\tmargin-bottom: 20px;\r\n\r\n\tbutton {\r\n\t\tbackground-color: #90cdf4;\r\n\t\tborder-radius: 10px;\r\n\t\twidth: 100%;\r\n\t\theight: 50px;\r\n\t\topacity: 0.5;\r\n\t\ttransition: opacity 0.25s ease-in-out;\r\n\t\ttransition: opacity 0.25s ease-in-out, box-shadow 0.25s ease-in-out;\r\n\t\tbox-shadow: 10px 10px 14px 1px rgb(0 0 0 / 10%);\r\n\r\n\t\t&.isWakeup {\r\n\t\t\topacity: ${(props) => (props.isChart ? '1' : '0.7')};\r\n\t\t\tpointer-events: ${(props) => (props.isChart ? 'none' : 'all')};\r\n\t\t\tbox-shadow: ${(props) =>\r\n\t\t\t\tprops.isChart ? 'none' : '10px 10px 14px 1px rgb(0 0 0 / 10%)'};\r\n\t\t}\r\n\t\t&.isSleep {\r\n\t\t\topacity: ${(props) => (props.isChart ? '0.7' : '1')};\r\n\t\t\tpointer-events: ${(props) => (props.isChart ? 'all' : 'none')};\r\n\t\t\tbox-shadow: ${(props) =>\r\n\t\t\t\tprops.isChart ? '10px 10px 14px 1px rgb(0 0 0 / 10%)' : 'none'};\r\n\t\t}\r\n\r\n\t\t&:first-child {\r\n\t\t\tmargin-right: 30px;\r\n\t\t}\r\n\r\n\t\t&:hover {\r\n\t\t\topacity: 1;\r\n\t\t\tbox-shadow: none;\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nconst chartVariants: Variants = {\r\n\tinitial: {\r\n\t\tx: 500,\r\n\t\topacity: 0,\r\n\t\tscale: 0,\r\n\t},\r\n\tanimate: {\r\n\t\tx: 0,\r\n\t\topacity: 1,\r\n\t\tscale: 1,\r\n\t},\r\n\texit: {\r\n\t\tx: -500,\r\n\t\topacity: 0,\r\n\t\tscale: 0,\r\n\t},\r\n};\r\n\r\nfunction Charts() {\r\n\tconst { id } = useParams();\r\n\tconst isChart = useRecoilValue(isChartAtom);\r\n\r\n\treturn <>{isChart ? <Chart key={id} /> : <SleepChart key={id} />}</>;\r\n}\r\n\r\nexport default Charts;\r\n","import { motion, useViewportScroll } from 'framer-motion';\r\nimport { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useRecoilState } from 'recoil';\r\nimport styled from 'styled-components';\r\nimport { IChartData, themeState } from '../atoms';\r\n\r\ntype HeaderProps = {\r\n\tisScroll: boolean;\r\n};\r\n\r\nconst HeaderSection = styled.header<HeaderProps>`\r\n\tpadding: 8px;\r\n\tposition: fixed;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\tz-index: 1;\r\n\tbackground-color: ${(props) => props.theme.bgColor};\r\n\twidth: 100%;\r\n\theight: 60px;\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n\talign-items: center;\r\n\ttransition: box-shadow 0.2s ease-in-out;\r\n\topacity: 0.97;\r\n\tborder-bottom: ${(props) =>\r\n\t\tprops.isScroll ? 'none' : `1px solid ${props.theme.borderColor}`};\r\n\tbox-shadow: ${(props) =>\r\n\t\tprops.isScroll ? '0px 2px 4px rgb(0 0 0 / 10%)' : 'none'};\r\n`;\r\n\r\nconst ToggleButton = styled(motion.div)<{ isToggle: boolean }>`\r\n\twidth: 50px;\r\n\theight: 24px;\r\n\tbackground-color: rgba(0, 0, 0, 0.185);\r\n\tdisplay: flex;\r\n\tjustify-content: ${(props) => (props.isToggle ? 'flex-start' : 'flex-end')};\r\n\talign-items: center;\r\n\tborder-radius: 25px;\r\n\tpadding: 5px;\r\n\tcursor: pointer;\r\n\r\n\t.handle {\r\n\t\twidth: 20px;\r\n\t\theight: 20px;\r\n\t\tbackground-color: white;\r\n\t\tborder-radius: 20px;\r\n\t}\r\n`;\r\n\r\nfunction Header() {\r\n\tconst { scrollYProgress } = useViewportScroll();\r\n\tconst [isDark, setIsDark] = useRecoilState(themeState);\r\n\tconst [isScroll, setIsScroll] = useState<boolean>(false);\r\n\r\n\tscrollYProgress.onChange(() =>\r\n\t\tscrollYProgress.get() === 0 ? setIsScroll(false) : setIsScroll(true)\r\n\t);\r\n\r\n\tconst [isOn, setIsOn] = useState(false);\r\n\tconst toggleSwitch = () => {\r\n\t\tsetIsOn(!isOn);\r\n\t\tsetIsDark((prev) => !prev);\r\n\t};\r\n\r\n\t//\r\n\tconst [chartDB, setChartDB] = useState<IChartData[]>([]);\r\n\tlet date = new Date();\r\n\tconst currentDate = `${date.getFullYear()}${\r\n\t\tdate.getMonth() + 1 < 10 ? `0${date.getMonth() + 1}` : date.getMonth() + 1\r\n\t}`;\r\n\r\n\tconst newLocalData: IChartData[] = [\r\n\t\t{\r\n\t\t\tdate: currentDate,\r\n\t\t\twakeUpDateTrack: [],\r\n\t\t\twakeUpTimeTrack: [],\r\n\t\t\tsleepDateTrack: [],\r\n\t\t\tsleepTimeTrack: [],\r\n\t\t},\r\n\t];\r\n\r\n\tuseEffect(() => {\r\n\t\tconst response = localStorage.getItem('userWakeUpChartData');\r\n\r\n\t\tif (!response) {\r\n\t\t\t// 처음 들어왔을 때 바로 아래 실행\r\n\t\t\tsetChartDB([...newLocalData]);\r\n\t\t\tlocalStorage.setItem('userWakeUpChartData', JSON.stringify(newLocalData));\r\n\t\t} else {\r\n\t\t\tconst storageData: IChartData[] = JSON.parse(response);\r\n\t\t\tconst isCurrent = storageData.findIndex((el) => el?.date === currentDate); // 현재 Year&Month인지 확인\r\n\r\n\t\t\tif (isCurrent !== -1) {\r\n\t\t\t\tsetChartDB(storageData);\r\n\t\t\t} else {\r\n\t\t\t\t// 11월 -> 12월로 바뀌면 새로운 date: Year&Month 를 추가\r\n\t\t\t\tlet newDB;\r\n\t\t\t\tsetChartDB((oldData) => {\r\n\t\t\t\t\tnewDB = [...oldData, ...newLocalData];\r\n\t\t\t\t\treturn newDB;\r\n\t\t\t\t});\r\n\t\t\t\tlocalStorage.setItem('userWakeUpChartData', JSON.stringify(newDB));\r\n\t\t\t}\r\n\t\t}\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<HeaderSection isScroll={isScroll}>\r\n\t\t\t\t<Link to=\"/\">메인 페이지</Link>\r\n\t\t\t\t{chartDB.map((el, index) => (\r\n\t\t\t\t\t<Link key={index} to={`/${el?.date}`}>\r\n\t\t\t\t\t\t{el?.date.substring(0, 4)}년도 {el?.date.substring(4)}월 그래프\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t))}\r\n\t\t\t\t<ToggleButton\r\n\t\t\t\t\tclassName=\"switch\"\r\n\t\t\t\t\tisToggle={isOn}\r\n\t\t\t\t\tonClick={toggleSwitch}\r\n\t\t\t\t\tlayout\r\n\t\t\t\t>\r\n\t\t\t\t\t<motion.div layout className=\"handle\" />\r\n\t\t\t\t</ToggleButton>\r\n\t\t\t</HeaderSection>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst FooterWrapper = styled.footer`\r\n\tmin-height: 216px;\r\n\twidth: 100%;\r\n\tpadding: 32px;\r\n\tbackground-color: ${(props) => props.theme.footerBgColor};\r\n\tcolor: white;\r\n`;\r\n\r\nconst FooterContainer = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tmax-width: 1240px;\r\n\tmargin: 0 auto;\r\n\r\n\t.footer {\r\n\t\t&-top {\r\n\t\t\tdisplay: flex;\r\n\t\t\tflex-wrap: wrap;\r\n\t\t\tmargin-bottom: 32px;\r\n\r\n\t\t\t.footer-card {\r\n\t\t\t\tpadding: 0 16px;\r\n\t\t\t\tflex: 1;\r\n\t\t\t}\r\n\r\n\t\t\t.footer-title {\r\n\t\t\t\tfont-weight: 700;\r\n\t\t\t\tmargin-bottom: 16px;\r\n\t\t\t}\r\n\r\n\t\t\t.footer-items {\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\tflex: 1;\r\n\t\t\t}\r\n\r\n\t\t\t.footer-item {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\talign-items: center;\r\n\t\t\t\theight: 32px;\r\n\t\t\t\twidth: 100%;\r\n\r\n\t\t\t\ta {\r\n\t\t\t\t\ttransition: color 0.2s ease-in-out;\r\n\r\n\t\t\t\t\t&:hover {\r\n\t\t\t\t\t\ttext-decoration: underline;\r\n\t\t\t\t\t\tcolor: #3578e5;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t&-bottom {\r\n\t\t\ttext-align: center;\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nfunction Footer() {\r\n\treturn (\r\n\t\t<FooterWrapper>\r\n\t\t\t<FooterContainer>\r\n\t\t\t\t<div className=\"footer-top\">\r\n\t\t\t\t\t<div className=\"footer-card\">\r\n\t\t\t\t\t\t<h3 className=\"footer-title\">Developer/Comment</h3>\r\n\t\t\t\t\t\t<ul className=\"footer-items\">\r\n\t\t\t\t\t\t\t<li className=\"footer-item\">\r\n\t\t\t\t\t\t\t\t<span>김준영</span>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li className=\"footer-item\">\r\n\t\t\t\t\t\t\t\t<p>피드백은 메일로 보내주세요!</p>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"footer-card\">\r\n\t\t\t\t\t\t<h3 className=\"footer-title\">Contact</h3>\r\n\t\t\t\t\t\t<ul className=\"footer-items\">\r\n\t\t\t\t\t\t\t<li className=\"footer-item\">\r\n\t\t\t\t\t\t\t\t<a href=\"mailto:dev.jyoung.ac@gmail.com\">\r\n\t\t\t\t\t\t\t\t\tdev.jyoung.ac@gmail.com\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li className=\"footer-item\">\r\n\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\thref=\"https://github.com/SUPERPET21\"\r\n\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tGitHub\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"footer-card\">\r\n\t\t\t\t\t\t<h3 className=\"footer-title\">Docs</h3>\r\n\t\t\t\t\t\t<ul className=\"footer-items\">\r\n\t\t\t\t\t\t\t<li className=\"footer-item\">\r\n\t\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\t\tto=\"/pages/terms\"\r\n\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t주의사항/사용방법\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"footer-bottom\">\r\n\t\t\t\t\t<span>Copyright © 2021 김준영. All Rights Reserved.</span>\r\n\t\t\t\t</div>\r\n\t\t\t</FooterContainer>\r\n\t\t</FooterWrapper>\r\n\t);\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst TermWrapper = styled.div`\r\n\tmin-height: 100vh;\r\n\tpadding: 1% 10%;\r\n\tpadding-top: 120px;\r\n\tsection {\r\n\t\tmargin-bottom: 25px;\r\n\r\n\t\th2 {\r\n\t\t\tfont-size: 2rem;\r\n\t\t\tfont-weight: 700;\r\n\t\t\tmargin-bottom: 16px;\r\n\t\t}\r\n\r\n\t\tli {\r\n\t\t\tfont-size: 18px;\r\n\t\t\tmargin-bottom: 10px;\r\n\t\t\tposition: relative;\r\n\t\t\tdisplay: flex;\r\n\t\t\talign-items: flex-start;\r\n\r\n\t\t\t&::before {\r\n\t\t\t\tfont-size: 14px;\r\n\t\t\t\tcontent: '-';\r\n\t\t\t\tdisplay: block;\r\n\t\t\t\tposition: absolute;\r\n\t\t\t}\r\n\r\n\t\t\tspan {\r\n\t\t\t\tpadding-left: 20px;\r\n\t\t\t\tline-height: 27px;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t&.last-word {\r\n\t\t\tp {\r\n\t\t\t\tfont-size: 18px;\r\n\t\t\t\tline-height: 27px;\r\n\t\t\t\tmargin-bottom: 32px;\r\n\t\t\t}\r\n\r\n\t\t\th4 {\r\n\t\t\t\tfont-size: 2rem;\r\n\t\t\t\tfont-weight: 700;\r\n\t\t\t\ttext-align: left;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nfunction Terms() {\r\n\treturn (\r\n\t\t<TermWrapper>\r\n\t\t\t<section>\r\n\t\t\t\t<h2>주의사항</h2>\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<span>00:00 이후에는 전날 데이터를 수정할 수 없습니다.</span>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<span>매월 1일에 해당 월의 그래프가 새로 생성됩니다.</span>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t매월 1일이 되면 이전 달의 그래프에 데이터를 추가/변경할 수\r\n\t\t\t\t\t\t\t없습니다.\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<span>기상 시간과 취침 시간의 시간 입력 범위가 다릅니다.</span>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t\t</section>\r\n\t\t\t<section>\r\n\t\t\t\t<h2>사용방법</h2>\r\n\t\t\t\t<ol>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t시간을 입력하신 후 시간 입력/수정 버튼을 누르시면 최초 입력 시에는\r\n\t\t\t\t\t\t\t추가가 되고 최초가 아니라면 수정이 됩니다.\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<span>당일에는 기상/취침 시간을 삭제 또는 수정할 수 있습니다.</span>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t평균 기상 시간은 한 달을 평균으로 계산한 것이고, 매일 입력한 값에\r\n\t\t\t\t\t\t\t따라 평균 시간이 계산됩니다.\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ol>\r\n\t\t\t</section>\r\n\t\t\t<section>\r\n\t\t\t\t<h2>개발자 코멘트</h2>\r\n\t\t\t\t<ol>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t계속해서 기능을 추가하고 있으며, 페이지의 디자인도 수정하고\r\n\t\t\t\t\t\t\t있습니다.\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t기능을 구현하는 데에 있어서 기술이 부족했기 때문에 오류가 발생할\r\n\t\t\t\t\t\t\t수 있습니다. 오류가 발생한 경우 메일로 보내주시면 신속하게\r\n\t\t\t\t\t\t\t해결하겠습니다.\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t기능 및 디자인에 있어서 추가/수정할 사항들을 메일로 보내주시면\r\n\t\t\t\t\t\t\t적극 반영하겠습니다!\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t또한, 기상/취침 시간 기록 그래프뿐만 아니라 다른 종류의 프로그램도\r\n\t\t\t\t\t\t\t제작할 예정입니다.\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ol>\r\n\t\t\t</section>\r\n\t\t\t<section className=\"last-word\">\r\n\t\t\t\t<p>\r\n\t\t\t\t\t자신을 더욱 성장시키고, 어제보다 나은 오늘, 어제보다 성장한 오늘을\r\n\t\t\t\t\t만들고자 하시는 분들에게 도움을 드리기 위해 제작하였습니다.\r\n\t\t\t\t\t<br /> 앞으로 더욱 성장하는 개발자가 될 수 있도록 최선을 다하겠습니다.\r\n\t\t\t\t</p>\r\n\t\t\t\t<h4>제가 제작한 프로그램에 관심을 가져 주셔서 정말 감사합니다.</h4>\r\n\t\t\t</section>\r\n\t\t</TermWrapper>\r\n\t);\r\n}\r\n\r\nexport default Terms;\r\n","import React from 'react';\r\nimport { useRecoilValue } from 'recoil';\r\nimport { createGlobalStyle, ThemeProvider } from 'styled-components';\r\nimport { themeState } from './atoms';\r\nimport { darkTheme, lightTheme } from './theme';\r\nimport { Routes, Route } from 'react-router-dom';\r\nimport Main from './components/Main';\r\nimport Charts from './components/Charts';\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\nimport Terms from './components/Terms';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  html, body, div, span, applet, object, iframe,\r\n  h1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\n  a, abbr, acronym, address, big, cite, code,\r\n  del, dfn, em, img, ins, kbd, q, s, samp,\r\n  small, strike, strong, sub, sup, tt, var,\r\n  b, u, i, center,\r\n  dl, dt, dd, menu, ol, ul, li,\r\n  fieldset, form, label, legend,\r\n  table, caption, tbody, tfoot, thead, tr, th, td,\r\n  article, aside, canvas, details, embed,\r\n  figure, figcaption, footer, header, hgroup,\r\n  main, menu, nav, output, ruby, section, summary,\r\n  time, mark, audio, video {\r\n    margin: 0;\r\n    padding: 0;\r\n    border: 0;\r\n    font-size: 100%;\r\n    font: inherit;\r\n    vertical-align: baseline;\r\n  }\r\n  /* HTML5 display-role reset for older browsers */\r\n  article, aside, details, figcaption, figure,\r\n  footer, header, hgroup, main, menu, nav, section {\r\n    display: block;\r\n  }\r\n  /* HTML5 hidden-attribute fix for newer browsers */\r\n  *[hidden] {\r\n      display: none;\r\n  }\r\n  body {\r\n    line-height: 1;\r\n  }\r\n  menu, ol, ul {\r\n    list-style: none;\r\n  }\r\n  blockquote, q {\r\n    quotes: none;\r\n  }\r\n  blockquote:before, blockquote:after,\r\n  q:before, q:after {\r\n    content: '';\r\n    content: none;\r\n  }\r\n  table {\r\n    border-collapse: collapse;\r\n    border-spacing: 0;\r\n  }\r\n  * {\r\n    box-sizing: border-box;\r\n  }\r\n  a {\r\n    color: inherit;\r\n    text-decoration: none;\r\n  }\r\n  button {\r\n    outline: none;\r\n    border: none;\r\n    cursor: pointer;\r\n  }\r\n  body {\r\n    /* transition: background-color .35s ease-in-out, color .35s ease-in-out; */\r\n    background-color: ${(props) => props.theme.bgColor};\r\n    color: ${(props) => props.theme.textColor};\r\n  }\r\n`;\r\n\r\nfunction App() {\r\n\tconst isDark = useRecoilValue(themeState);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<ThemeProvider theme={isDark ? darkTheme : lightTheme}>\r\n\t\t\t\t<GlobalStyle />\r\n\t\t\t\t<Header />\r\n\r\n\t\t\t\t<Routes>\r\n\t\t\t\t\t<Route path=\"/pages/terms\" element={<Terms />} />\r\n\t\t\t\t\t<Route path=\"/:id\" element={<Charts />} />\r\n\t\t\t\t\t<Route path=\"/\" element={<Main />} />\r\n\t\t\t\t</Routes>\r\n\t\t\t\t<Footer />\r\n\t\t\t</ThemeProvider>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { RecoilRoot } from 'recoil';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<HashRouter>\r\n\t\t\t<RecoilRoot>\r\n\t\t\t\t<App />\r\n\t\t\t</RecoilRoot>\r\n\t\t</HashRouter>\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n"],"sourceRoot":""}